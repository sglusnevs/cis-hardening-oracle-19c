---

- name: "{{ 'TASK | ' + item.task_id + ' ' + item.task_name }}"
  vars:
      task_name: "{{ item.task_id + ' ' + item.task_name }}"
      sql_get: |
          {{ ora19cis_sqlplus_header_data_get }}
          SET HEADING OFF
          SET FEEDBACK OFF
          SET MARKUP CSV ON QUOTE OFF
          SELECT P.PROFILE, P.RESOURCE_NAME, P.LIMIT FROM DBA_PROFILES P WHERE TO_NUMBER(DECODE(P.LIMIT, 'DEFAULT',(SELECT DISTINCT DECODE(LIMIT,'UNLIMITED',9999,LIMIT) FROM DBA_PROFILES WHERE PROFILE='DEFAULT' AND RESOURCE_NAME='PASSWORD_REUSE_TIME'), 'UNLIMITED','9999',P.LIMIT)) < {{ ora19cis_oracle_password_reuse_time }} AND P.RESOURCE_NAME = 'PASSWORD_REUSE_TIME' AND EXISTS ( SELECT 'X' FROM DBA_USERS U WHERE U.PROFILE = P.PROFILE );
      sql_fix: |
          {{ ora19cis_sqlplus_header_data_fix }}
          ALTER PROFILE %s LIMIT PASSWORD_REUSE_TIME {{ ora19cis_oracle_password_reuse_time }};

  block:
      - name: "GET | {{ task_name }}"
        become_user: "{{ ora19cis_oracle_user }}"
        ansible.builtin.shell: echo "{{ sql_get }}" | {{ ora19cis_sqlplus_cmd }} 
        environment: "{{ ora19cis_oracle_env | combine }}"
        register: result_get
        failed_when: result_get.stderr or result_get.rc != 0 or result_get.stdout | regex_search(ora19cis_sqlplus_failure_check_regex)
        changed_when: false

      - name: "FIX | {{ task_name }}"
        become_user: "{{ ora19cis_oracle_user }}"
        ansible.builtin.shell: echo "{{ sql_fix | regex_replace('%s', (item_get | split(',') | first)) }}" | {{ ora19cis_sqlplus_cmd }}
        with_items: "{{ result_get.stdout_lines }}"
        loop_control:
           loop_var: item_get
        environment: "{{ ora19cis_oracle_env | combine }}"
        register: result_fix
        failed_when: result_fix.stderr or result_fix.rc != 0 or result_fix.stdout | regex_search(ora19cis_sqlplus_failure_check_regex)
        when: result_get.stdout

  when:
      - ora19cis_rules[item.task_tag]

  tags:
      - level_1
      - level_2
      - get
      - fix
      - "{{ 'rule_' + item.task_tag }}"
