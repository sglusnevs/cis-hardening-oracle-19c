---

- name: "{{ 'TASK | ' + item.task_id + ' ' + item.task_name }}"
  vars:
      task_name: "{{ item.task_id + ' ' + item.task_name }}"
      sql_get: |
          {{ ora19cis_sqlplus_header_data_get }}
          SELECT 'GRANT' AS PATH, GRANTEE, GRANTED_ROLE FROM DBA_ROLE_PRIVS WHERE GRANTED_ROLE = 'AUDIT_ADMIN' AND GRANTEE NOT IN ('SYS', 'SYSTEM') UNION SELECT 'PROXY', PROXY || '-' || CLIENT, 'AUDIT_ADMIN' FROM DBA_PROXIES WHERE CLIENT IN (SELECT GRANTEE FROM DBA_ROLE_PRIVS WHERE GRANTED_ROLE = 'AUDIT_ADMIN');
      sql_fix: |
          {{ ora19cis_sqlplus_header_data_fix }}
          REVOKE AUDIT_ADMIN FROM %s;

  block:
      - name: "GET | {{ task_name }}"
        become_user: "{{ ora19cis_oracle_user }}"
        ansible.builtin.shell: echo "{{ sql_get }}" | {{ ora19cis_sqlplus_cmd }} 
        environment: "{{ ora19cis_oracle_env | combine }}"
        register: result_get
        failed_when: result_get.stderr or result_get.rc != 0 or result_get.stdout | regex_search(ora19cis_sqlplus_failure_check_regex)
        changed_when: false
        tags: get

      - ansible.builtin.debug:
          msg: "{{ result_get }}"
        when: sqlplus_debug

      - name: "FIX | {{ task_name }}"
        become_user: "{{ ora19cis_oracle_user }}"
        ansible.builtin.shell: echo "{{ sql_fix | regex_replace('%s', (item_get | split(','))[1]) }}" | {{ ora19cis_sqlplus_cmd }}
        with_items: "{{ result_get.stdout_lines }}"
        loop_control:
           loop_var: item_get
        environment: "{{ ora19cis_oracle_env | combine }}"
        register: result_fix
        failed_when: result_fix.stderr or result_fix.rc != 0 or result_fix.stdout | regex_search(ora19cis_sqlplus_failure_check_regex)
        when: result_get.stdout

      - ansible.builtin.debug:
          msg: "{{ result_fix }}"
        when: sqlplus_debug

  when:
      - ora19cis_rules[item.task_tag]

  tags:
      - level_1
      - level_2
      - fix
      - "{{ 'rule_' + item.task_tag }}"
