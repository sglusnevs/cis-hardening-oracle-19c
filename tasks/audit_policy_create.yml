---
- name: "PRELIM | Establishing an Audit/Scan Policy"
  vars:
      task_name: "Establishing an Audit/Scan Policy"
      sql_get: |
          {{ ora19cis_sqlplus_header_data_get }}
          SELECT POLICY_NAME FROM AUDIT_UNIFIED_POLICIES WHERE POLICY_NAME = '{{ ora19cis_oracle_audit_policy_name }}';
      sql_fix_pluggable: |
          {{ ora19cis_sqlplus_header_data_fix }}
          CREATE AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} PRIVILEGES CREATE USER;
      sql_fix_container: |
          {{ ora19cis_sqlplus_header_data_fix }}
          CREATE AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} PRIVILEGES CREATE USER CONTAINER=ALL;
      sql_fix: |
          AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }};
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS ALTER USER;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS DROP USER;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS CREATE ROLE;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS ALTER ROLE;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS DROP ROLE;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS GRANT;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS REVOKE;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS CREATE PROFILE;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS ALTER PROFILE;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS DROP PROFILE;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS CREATE DATABASE LINK;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS ALTER DATABASE LINK;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS DROP DATABASE LINK;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS CREATE SYNONYM;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS ALTER SYNONYM;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS DROP SYNONYM;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD PRIVILEGES SELECT ANY DICTIONARY;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS ALL ON AUDSYS.AUD\$UNIFIED;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS CREATE PROCEDURE, CREATE FUNCTION, CREATE PACKAGE, CREATE PACKAGE BODY;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS ALTER PROCEDURE, ALTER FUNCTION, ALTER PACKAGE, ALTER PACKAGE BODY;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS DROP PROCEDURE, DROP FUNCTION, DROP PACKAGE, DROP PACKAGE BODY;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS ALTER SYSTEM;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS CREATE TRIGGER;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS ALTER TRIGGER;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS DROP TRIGGER;
          ALTER AUDIT POLICY {{ ora19cis_oracle_audit_policy_name }} ADD ACTIONS LOGON, LOGOFF;

  block:
      - name: "GET | {{ task_name }}"
        become_user: "{{ ora19cis_oracle_user }}"
        ansible.builtin.shell: echo "{{ sql_get }}" | {{ ora19cis_sqlplus_cmd }}
        environment: "{{ ora19cis_oracle_env | combine }}"
        register: result_get
        failed_when: result_get.stderr or result_get.rc != 0 or result_get.stdout | regex_search(ora19cis_sqlplus_failure_check_regex)
        changed_when: false

      - name: "FIX NON-MULTI-TENANT | {{ task_name }}"
        become_user: "{{ ora19cis_oracle_user }}"
        ansible.builtin.shell: echo "{{ sql_fix_pluggable + sql_fix }}" | {{ ora19cis_sqlplus_cmd }}
        environment: "{{ ora19cis_oracle_env | combine }}"
        register: result_fix
        failed_when: result_fix.stderr or result_fix.rc != 0 or result_fix.stdout | regex_search(ora19cis_sqlplus_failure_check_regex)
        when: not result_get.stdout and (not ora19cis_oracle_db_multitenant or ora19cis_oracle_db_pluggable)

      - name: "FIX CONTAINER | {{ task_name }}"
        become_user: "{{ ora19cis_oracle_user }}"
        ansible.builtin.shell: echo "{{ sql_fix_container + sql_fix }}" | {{ ora19cis_sqlplus_cmd }}
        environment: "{{ ora19cis_oracle_env | combine }}"
        register: result_fix
        failed_when: result_fix.stderr or result_fix.rc != 0 or result_fix.stdout | regex_search(ora19cis_sqlplus_failure_check_regex)
        when: not result_get.stdout and ora19cis_oracle_db_multitenant

  tags:
      - audit_policy_create
