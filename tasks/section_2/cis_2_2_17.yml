---

- name: "{{ 'TASK | ' + item.task_id + ' ' + item.task_name }}"
  vars:
      task_name: "{{ item.task_id + ' ' + item.task_name }}"
      sql_get: |
          {{ ora19cis_sqlplus_header_data_get }}
          SELECT UPPER(VALUE) FROM V\$SYSTEM_PARAMETER WHERE UPPER(NAME)='PDB_OS_CREDENTIAL' AND VALUE IS NOT NULL;

  block:
      - name: "GET | {{ task_name }}"
        become_user: "{{ ora19cis_oracle_user }}"
        ansible.builtin.shell: echo "{{ sql_get }}" | {{ ora19cis_sqlplus_cmd }} 
        environment: "{{ ora19cis_oracle_env | combine }}"
        register: result_get
        failed_when: result_get.stderr or result_get.rc != 0 or result_get.stdout | regex_search(ora19cis_sqlplus_failure_check_regex)
        changed_when: false

      - ansible.builtin.debug:
          msg: "{{ result_get }}"
        when: sqlplus_debug

      - name: "WARN | {{ task_name }}"
        ansible.builtin.import_tasks: collect_cis_warnings.yml
        vars:
            warn_control_id: "{{ item.task_id }}"
            warn_control_msg: "Warning! Ensure 'PDB_OS_CREDENTIAL' is NOT null. Using the DBMS_CREDENTIAL package, ensure credentials are set for stand alone, container and pluggable databases."
        when: result_get.stdout | regex_search('no rows selected')

  when:
      - ora19cis_rules[item.task_tag]

  tags:
      - level_1
      - level_2
      - get
      - "{{ 'rule_' + item.task_tag }}"
